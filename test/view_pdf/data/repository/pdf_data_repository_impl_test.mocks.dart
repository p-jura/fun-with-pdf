// Mocks generated by Mockito 5.4.0 from annotations
// in fun_with_pdf/test/view_pdf/data/repository/pdf_data_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:fun_with_pdf/view_pdf/data/data_source/data_source.dart' as _i3;
import 'package:fun_with_pdf/view_pdf/data/model/pdf_bytes_model.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePdfBytesModel_0 extends _i1.SmartFake implements _i2.PdfBytesModel {
  _FakePdfBytesModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FilePickerDataSource].
///
/// See the documentation for Mockito's code generation for more information.
// ignore: must_be_immutable
class MockFilePickerDataSource extends _i1.Mock
    implements _i3.FilePickerDataSource {
  @override
  _i2.PdfBytesModel getDataFromFile() => (super.noSuchMethod(
        Invocation.method(
          #getDataFromFile,
          [],
        ),
        returnValue: _FakePdfBytesModel_0(
          this,
          Invocation.method(
            #getDataFromFile,
            [],
          ),
        ),
        returnValueForMissingStub: _FakePdfBytesModel_0(
          this,
          Invocation.method(
            #getDataFromFile,
            [],
          ),
        ),
      ) as _i2.PdfBytesModel);
}
